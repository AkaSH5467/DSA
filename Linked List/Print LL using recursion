#include <iostream>
using namespace std;

struct Node{
    int data;
    Node *link;
};

Node *front=NULL;
Node *rear=NULL;

bool isempty()
{
    if(front==NULL&&rear==NULL)
    {
        return 1;
    }
    
    else{
        return 0;
    }
}

void Enqueue(int d)
{
    Node *ptr=new Node();
    ptr->data=d;
    ptr->link=NULL;
    
    if(front==NULL)
    {
        front=ptr;
        rear=ptr;
    }
    else
    {
        rear->link=ptr;
        rear=ptr;
    }
}

void Dequeue()
{
    if(isempty())
    {
        cout<<"Queue is Empty";
        
    }
    
    else
    {
        if(front==rear)
        {
            free(front);
            front=rear=NULL;
        }
        else
        {
            
            Node *temp=front;
           
            
            front=front->link;
            free(temp);
            
        }
    }
}

void ShowFront()
{
    if(isempty())
    {
        cout<<"Empty Queue"<<endl;
    }
    
    else{
        cout<<front->data<<endl;
    }
}
void Display(Node *front)
{
    if(isempty())
    {
        cout<<"Empty Queue"<<endl;
    }
    
    else{
        Node *temp=front;
        
        while(temp!=NULL)
        {
            cout<<temp->data<<" ";
            temp=temp->link;
        }
    }
}

int main()
{
   Enqueue(3);
   Enqueue(5);
   Enqueue(3);
   Enqueue(1);
   Enqueue(6);
   Display(front);
   Dequeue();cout<<endl;
   Display(front);
    return 0;
}
